{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor(rendererFactory) {\n    this.currentTheme = 'light'; // Default theme\n    this.themes = {\n      light: 'light-theme',\n      dark: 'dark-theme',\n      creamy: 'creamy-theme',\n      'blind-color': 'blind-color-theme'\n    };\n    this.renderer = rendererFactory.createRenderer(null, null);\n    this.setTheme(this.currentTheme); // Apply default theme\n  }\n\n  setTheme(theme) {\n    // Remove the current theme class\n    this.renderer.removeClass(document.body, this.themes[this.currentTheme]);\n    // Apply the new theme\n    this.currentTheme = theme;\n    this.renderer.addClass(document.body, this.themes[theme]);\n  }\n  toggleTheme() {\n    const themeOrder = ['light', 'dark', 'creamy', 'blind-color'];\n    const nextThemeIndex = (themeOrder.indexOf(this.currentTheme) + 1) % themeOrder.length;\n    this.setTheme(themeOrder[nextThemeIndex]);\n  }\n  getCurrentTheme() {\n    return this.currentTheme;\n  }\n  static {\n    this.ɵfac = function ThemeService_Factory(t) {\n      return new (t || ThemeService)(i0.ɵɵinject(i0.RendererFactory2));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ThemeService,\n      factory: ThemeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ThemeService","constructor","rendererFactory","currentTheme","themes","light","dark","creamy","renderer","createRenderer","setTheme","theme","removeClass","document","body","addClass","toggleTheme","themeOrder","nextThemeIndex","indexOf","length","getCurrentTheme","i0","ɵɵinject","RendererFactory2","factory","ɵfac","providedIn"],"sources":["/Users/gagd/Sites/A11Y/a11y-accessibility-first/src/app/services/themes-color/theme.service.ts"],"sourcesContent":["import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\ntype Theme = 'light' | 'dark' | 'creamy' | 'blind-color';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  private renderer: Renderer2;\n  private currentTheme: Theme = 'light'; // Default theme\n  private themes = {\n    light: 'light-theme',\n    dark: 'dark-theme',\n    creamy: 'creamy-theme',\n    'blind-color': 'blind-color-theme',\n  };\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n    this.setTheme(this.currentTheme); // Apply default theme\n  }\n\n  setTheme(theme: Theme): void {\n    // Remove the current theme class\n    this.renderer.removeClass(document.body, this.themes[this.currentTheme]);\n\n    // Apply the new theme\n    this.currentTheme = theme;\n    this.renderer.addClass(document.body, this.themes[theme]);\n  }\n\n  toggleTheme(): void {\n    const themeOrder: Theme[] = ['light', 'dark', 'creamy', 'blind-color'];\n    const nextThemeIndex =\n      (themeOrder.indexOf(this.currentTheme) + 1) % themeOrder.length;\n    this.setTheme(themeOrder[nextThemeIndex]);\n  }\n\n  getCurrentTheme(): Theme {\n    return this.currentTheme;\n  }\n}\n"],"mappings":";AAOA,OAAM,MAAOA,YAAY;EAUvBC,YAAYC,eAAiC;IARrC,KAAAC,YAAY,GAAU,OAAO,CAAC,CAAC;IAC/B,KAAAC,MAAM,GAAG;MACfC,KAAK,EAAE,aAAa;MACpBC,IAAI,EAAE,YAAY;MAClBC,MAAM,EAAE,cAAc;MACtB,aAAa,EAAE;KAChB;IAGC,IAAI,CAACC,QAAQ,GAAGN,eAAe,CAACO,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC;IAC1D,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACP,YAAY,CAAC,CAAC,CAAC;EACpC;;EAEAO,QAAQA,CAACC,KAAY;IACnB;IACA,IAAI,CAACH,QAAQ,CAACI,WAAW,CAACC,QAAQ,CAACC,IAAI,EAAE,IAAI,CAACV,MAAM,CAAC,IAAI,CAACD,YAAY,CAAC,CAAC;IAExE;IACA,IAAI,CAACA,YAAY,GAAGQ,KAAK;IACzB,IAAI,CAACH,QAAQ,CAACO,QAAQ,CAACF,QAAQ,CAACC,IAAI,EAAE,IAAI,CAACV,MAAM,CAACO,KAAK,CAAC,CAAC;EAC3D;EAEAK,WAAWA,CAAA;IACT,MAAMC,UAAU,GAAY,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC;IACtE,MAAMC,cAAc,GAClB,CAACD,UAAU,CAACE,OAAO,CAAC,IAAI,CAAChB,YAAY,CAAC,GAAG,CAAC,IAAIc,UAAU,CAACG,MAAM;IACjE,IAAI,CAACV,QAAQ,CAACO,UAAU,CAACC,cAAc,CAAC,CAAC;EAC3C;EAEAG,eAAeA,CAAA;IACb,OAAO,IAAI,CAAClB,YAAY;EAC1B;;;uBAjCWH,YAAY,EAAAsB,EAAA,CAAAC,QAAA,CAAAD,EAAA,CAAAE,gBAAA;IAAA;EAAA;;;aAAZxB,YAAY;MAAAyB,OAAA,EAAZzB,YAAY,CAAA0B,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}